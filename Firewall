  1 #!/bin/bash
  2 #
  3 # Firewall tabajara by claudio <kleber.lookline@gmail.com>
  4 #
  5 EXT_IPS="XXX.XXX.XXX.XXX. Ip do servidor"
  6 LO_IP="127.0.0.1"
  7 EXT_IF="eth0"
  8 INT_IF=""
  9 INT_IP=""
 10 LO_IF="lo"
 11
 12 OFFICE1="XXX.XXX.XXX.XXX. Ip do escritorio www.meuip.com.br"
 13 OFFICE2="XXX.XXX.XXX.XXX. Ip do escritorio www.meuip.com.br"
 14 CAROSUPPORT="64.132.46.100/27"
 15
 16
 17 ALLOWED_SSH="${OFFICE1} ${OFFICE2} ${MONITORAMENTO} 200.98.197.86"
 18
 19 ALLOWED_MYSQL="${OFFICE1} ${OFFICE2} ips do cliente 201.52.210.30 186.204.183.244 186.20"
 20
 21 INPUT_PORTS="21 80 443 portas"
 22
 23 
 25 MONITORAMENTO="ip dos servidores de monitoramento 201.20.12.182"
 26
 27
 28 IPTABLES="/sbin/iptables"
 29 MODPROBE="/sbin/modprobe"
 30
 31
 32 firewall_start()
 33 {
 34 # Mudando politica
 35 ${IPTABLES} -P INPUT DROP
 36
 37 # Carregando Modulos
 38 ${MODPROBE} ip_conntrack_ftp
 39 ${MODPROBE} ip_nat_ftp
 40
 41 # Regras Input
 42 for IP in ${LO_IP} ${INT_IP} ${EXT_IPS}; do
 43         ${IPTABLES} -A INPUT -i ${LO_IF} -s ${IP} -j ACCEPT
 44 done
 45
 46 ${IPTABLES} -A INPUT -p icmp --icmp-type echo-request -m limit --limit 5/s -j ACCEPT
 47 ${IPTABLES} -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
 48
 49 for PORT in ${INPUT_PORTS}; do
 50         ${IPTABLES} -A INPUT -p tcp -i ${EXT_IF} --dport ${PORT} -j ACCEPT
 51         ${IPTABLES} -A INPUT -p udp -i ${EXT_IF} --dport ${PORT} -j ACCEPT
 52 #       ${IPTABLES} -A INPUT -p tcp -i ${INT_IF} --dport ${PORT} -j ACCEPT
 53 #       ${IPTABLES} -A INPUT -p udp -i ${INT_IF} --dport ${PORT} -j ACCEPT
 54 done
 55
 56 # Aceitando conexao para o mysql
 57 for SRC in ${ALLOWED_MYSQL}; do
 58 #       ${IPTABLES} -A INPUT -p tcp -i ${INT_IF} -s ${SRC} --dport 3306 -j ACCEPT
 59         ${IPTABLES} -A INPUT -p tcp -i ${EXT_IF} -s ${SRC} --dport 3306 -j ACCEPT
 60 done
 61
 62 # Aceitando SSH
 63 for SRC in ${ALLOWED_SSH}; do
 64         ${IPTABLES} -A INPUT -p tcp -i ${EXT_IF} -s ${SRC} --dport 13000 -j ACCEPT
 65 #       ${IPTABLES} -A INPUT -p tcp -i ${INT_IF} -s ${SRC} --dport 13000 -j ACCEPT
 66 done
 67
 68 # Liberando acesso as maquinas de monitoramento
 69 for IP in ${MONITORAMENTO}; do
 70         for DST in ${INT_IP} ${EXT_IPS}; do
 71                 ${IPTABLES} -A INPUT -p tcp -s ${IP} -d ${DST} -j ACCEPT
 72                 ${IPTABLES} -A INPUT -p udp -s ${IP} -d ${DST} -j ACCEPT
 73         done
 74 done
 75
 76 # Dificultando Nmap
 77 ${IPTABLES} -A INPUT -p tcp -i ${EXT_IF} --tcp-flags ALL FIN,URG,PSH -j DROP
 78 ${IPTABLES} -A INPUT -p tcp -i ${EXT_IF} --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP
 79 ${IPTABLES} -A INPUT -p tcp -i ${EXT_IF} --tcp-flags ALL ALL -j DROP
 80 ${IPTABLES} -A INPUT -p tcp -i ${EXT_IF} --tcp-flags ALL FIN -j DROP
 81 ${IPTABLES} -A INPUT -p tcp -i ${EXT_IF} --tcp-flags RST RST -j DROP
 82 ${IPTABLES} -A INPUT -p tcp -i ${EXT_IF} --tcp-flags SYN,RST SYN,RST -j DROP
 83 ${IPTABLES} -A INPUT -p tcp -i ${EXT_IF} --tcp-flags SYN,FIN SYN,FIN -j DROP
 84 ${IPTABLES} -A INPUT -p tcp -i ${EXT_IF} --tcp-flags ALL NONE -j DROP
 85
 86 # Bloqueando Input
 87 ${IPTABLES} -A INPUT -p icmp -m state --state INVALID -j DROP
 88 ${IPTABLES} -A INPUT -p tcp ! --syn -m state --state NEW -j DROP
 89 ${IPTABLES} -A INPUT -p tcp --syn -j DROP
 90
 91 #${IPTABLES} -A INPUT -j DROP
 92
 93 ${IPTABLES} -N LOGDROP
 94 ${IPTABLES} -A LOGDROP -j LOG
 95 ${IPTABLES} -A LOGDROP -j DROP
 96
 97 ${IPTABLES} -A INPUT -j LOGDROP
 98
 99
100 #${IPTABLES} -A INPUT -j DROP
101
102
103 # Protecao contra ataques Smurf
104 #
105 echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
106
107 # Protecao contra synflood
108 #
109 if [ -f /proc/sys/net/ipv4/tcp_syncookies ]; then
110         echo "1" > /proc/sys/net/ipv4/tcp_syncookies
111 fi
112
113 }
114
115 firewall_stop()
116 {
117 ${IPTABLES} -P INPUT ACCEPT
118 ${IPTABLES} -F
119 ${IPTABLES} -X
120 ${IPTABLES} -Z
121 }
122
123 firewall_restart()
124 {
125 firewall_stop
126 sleep 1
127 firewall_start
128 }
129
130 case "$1" in
131 'start')
132   firewall_start
133   ;;
134 'stop')
135   firewall_stop
136   ;;
137 'restart')
138   firewall_restart
139   ;;
140 *)
141   echo "usage $0 start|stop|restart"
142 esac
143
